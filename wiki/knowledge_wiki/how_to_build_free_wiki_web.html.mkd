<!---title:用vimwiki+markdown+pandoc+github搭建免费个人wiki-->
<!---date:2014-11-30 03:04 下午-->

因为楼主并非从事网络前端开发工作，搭建wiki使用的技术不甚熟悉，能够完成此事，是完全参考两位前辈的文章
（链接在这里：[1](http://www.mikewootc.com/wiki/tool/sitebuild/mikewiki.html) 和 [2](http://wiki.ohlinux.com/wiki/tool/sitebuild/ohlinuxwiki.html))，在此表示感谢。不过两位对某些要点忽略跳过了（可能他们觉得不是技术难点），导致走了些弯路。楼主会尽量把构建过程写完成，希望没有接触过的人也能顺利完成，当然如果想定制或者遇到问题时，还是要具备相关的知识才能搞定，否则真是无从下手的。

##长话短说
搭建个人主页的方式很多，这种免费个人wiki的**优劣**请参考上面提到的文章，实现的功能也基本上满足了我的需求。只是我的环境和他们不太一样， 
我是在windows下的[cygwin环境](../tools/install_and_use_cygwin.html)中实现的， 而不是他们的linux环境和mac环境，算是一种补充吧。

##各个工具是如何协同合作的
1. [git]()是一个代码版本管理工具，用它管理我们的个人wiki，所有文章就都有了历史版本管理，不用担心数据丢失的问题了。
2. [github]()是基于git版本管理技术的一个免费的在线版本服务器，很多优秀的开源代码都在上面进行版本管理。github还扩展了功能，当我们把html网页文件上传上去后，通过一个二级域名就能访问该网页了，如果自己花钱买一个一级域名， 也可以把这个域名和网页绑定，这样相当于自己建了一个简易的静态的网站了。我们把在本地的html文件使用git命令上传到github上，就可以在其他任意有网络的地方都能看到自己的wiki了。
3. 可是并不是人人都不了解html语法，实际上也没人愿意在写好文章后再编写html文件，那就让软件去做这个事好了，[pandoc]()工具就是其中之一。几乎市面上的文本格式它都能互转。这里我们要它把mkd文本文件装换为html格式的文件。
4. 上面提到的mkd文本文件实际上是符合[markdown]()语法写的文章。后缀名随便起都可以，但最好有自注释的效果。markdown可以理解为一种简化html的语法。目的是让人只专注于编辑文章内容本身，用简单的符号代表格式，让人“所想即所得”。
5. 任何文本编辑工具都能写具有markdown语法的文章，当然也有专门的软件。说到文本编辑工具不得不提“编辑器之神”----vi/vim/gvim，和“神的编辑器”----emacs，当然还有mac系统下的textmate。这3个之中湘桂接触较多的还是[vim]()，所以我们采用vim来编辑，实际上vim就有vim-markdown的插件，当我们还是用[vim-vimwiki]()插件修改wimwiki语法为markdown语法，各中利弊暂且不表。实际上此时我也没有深入了解o(╯□╰)o。
6. 忘了还有两个重要的工具[make]()和[shell]()，他们可以帮助我们自动化做一些重复的事。

##相关工具的安装
请移步[这里](../tools/navigation.html)。

##工具的配置
###vim的配置

###github的配置

##makefile脚本的编写

##shell脚本的编写

##使用教程











